{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'task-demo';\n  arr = new Array<any>();\n  selectedFile: any;\n  outputImg: any;\n  arrayOne(n: number): any[] {\n    return Array(n);\n  }\n \n  onFileChanged(event, i) {\n    let that = this;\n    this.selectedFile = event.target.files[0];\n    var reader = new FileReader();\n    reader.onloadend = function() {\n      that.outputImg = reader.result;\n      that.arr.push(reader.result);\n    };\n    reader.readAsDataURL(this.selectedFile);\n  } \n\n  removeUpload(i){\n    this.arr[i] = null;\n    this.selectedFile = null;\n    this.outputImg = null;\n    const indexT = this.arr.indexOf(null);\n    if (indexT > -1) {\n      this.arr.splice(indexT, 1);\n    }\n   }\n\n}\n","<h1>Aptiunix - Demo Task</h1>\n<div class=\"main\">\n<div class=\"card\" *ngFor=\"let item of arrayOne(6); let i = index;\">\n  <div class=\"file-upload\">\n    <div class=\"image-upload-wrap\" *ngIf=\"!arr[i]\">\n      <input class=\"file-upload-input\" type='file' #fileInput (change)=\"onFileChanged($event,i);\" accept=\"image/*\" required=\"true\" />\n      <div class=\"drag-text\">\n        <span class=\"badge\">{{i+1}}</span>\n        <h6>UPLOAD <br>OR <br>DRAG IMAGE</h6>\n      </div>\n    </div>\n    <div class=\"file-upload-content\" *ngIf=\"arr[i]\">\n      <img class=\"file-upload-image\" [src]=\"(arr[i])?arr[i]:''\" alt=\"your image\" />\n      <div class=\"image-title-wrap mt-3\">\n        <button type=\"button\" (click)=\"removeUpload(i)\" class=\"remove-image\">remove</button>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}